package Problem;

import java.util.*;

public class stack_42587 {
    public static void main(String[] args) {
        int[] priorities = {2,1,3,2};
        int location = 2;

        int answer = solution(priorities, location);
        System.out.println(answer);
    }

    public static class document {
        private final int priority;
        private final int location;

        public document(int priority, int location) {
            this.priority = priority;
            this.location = location;
        }

        public int getLocation() {
            return location;
        }

        public int getPriority() {
            return priority;
        }
    }

    public static int solution(int[] priorities, int location) {
        Queue<document> documentQ = new LinkedList<>();
        for(int i = 0; i < priorities.length; i++) {
            documentQ.add(new document(priorities[i], i));
        }
        Arrays.sort(priorities);

        int answer = 0;
        int highPriorityIdx = priorities.length - 1;
        while(!documentQ.isEmpty()) {
            document x = documentQ.poll();
            if (x.getPriority() == priorities[highPriorityIdx]) {
                answer++;
                highPriorityIdx--;
                if (x.getLocation() == location) break;
            }
            else {
                documentQ.add(x);
            }
        }

        return answer;
    }
}
